import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
import numpy as np

# 1. Import the data from medical_examination.csv and assign it to the df variable.
df = pd.read_csv('medical_examination.csv')


def draw_cat_plot():
    # 2. Add an 'overweight' column to the data.
    #    BMI = weight(kg) / (height(m))^2 ; overweight if BMI > 25 -> 1 else 0
    bmi = df['weight'] / ((df['height'] / 100) ** 2)
    df['overweight'] = (bmi > 25).astype(int)

    # 3. Normalize data: if cholesterol or gluc == 1 -> 0 (good), >1 -> 1 (bad)
    df['cholesterol'] = (df['cholesterol'] > 1).astype(int)
    df['gluc'] = (df['gluc'] > 1).astype(int)

    # 4. Create DataFrame for cat plot using pd.melt with the specified values
    df_cat = pd.melt(df,
                     id_vars=['cardio'],
                     value_vars=['cholesterol', 'gluc', 'smoke', 'alco', 'active', 'overweight']
                     )

    # 5. Group and reformat the data to split by 'cardio' and show counts
    df_cat = df_cat.groupby(['cardio', 'variable', 'value']).size().reset_index(name='total')

    # 6. Draw the categorical plot with seaborn catplot
    catplot = sns.catplot(data=df_cat,
                          x='variable',
                          y='total',
                          hue='value',
                          col='cardio',
                          kind='bar',
                          height=5,
                          aspect=1)

    # 7. Get the figure for the output and store it in the fig variable.
    fig = catplot.fig

    # 8. Do not modify the next two lines.
    fig.savefig('catplot.png')
    return fig


def draw_heat_map():
    # 1. Clean the data:
    #    - Keep rows where ap_lo <= ap_hi
    #    - Keep heights between 2.5th and 97.5th percentiles
    #    - Keep weights between 2.5th and 97.5th percentiles
    df_heat = df.copy()

    # Filter: diastolic less than or equal to systolic
    df_heat = df_heat[df_heat['ap_lo'] <= df_heat['ap_hi']]

    # Height between 2.5th and 97.5th percentiles
    h_low = df_heat['height'].quantile(0.025)
    h_high = df_heat['height'].quantile(0.975)
    df_heat = df_heat[(df_heat['height'] >= h_low) & (df_heat['height'] <= h_high)]

    # Weight between 2.5th and 97.5th percentiles
    w_low = df_heat['weight'].quantile(0.025)
    w_high = df_heat['weight'].quantile(0.975)
    df_heat = df_heat[(df_heat['weight'] >= w_low) & (df_heat['weight'] <= w_high)]

    # 2. Calculate the correlation matrix and store in corr
    corr = df_heat.corr()

    # 3. Generate a mask for the upper triangle
    mask = np.triu(np.ones_like(corr, dtype=bool))

    # 4. Set up the matplotlib figure
    fig, ax = plt.subplots(figsize=(12, 10))

    # 5. Draw the heatmap with seaborn
    sns.heatmap(corr,
                mask=mask,
                annot=True,
                fmt='.1f',
                center=0,
                square=True,
                linewidths=.5,
                cbar_kws={"shrink": .5},
                ax=ax)

    # 6. Do not modify the next two lines.
    fig.savefig('heatmap.png')
    return fig


if __name__ == "__main__":
    # When running the module directly, generate and save both plots.
    draw_cat_plot()
    draw_heat_map()
