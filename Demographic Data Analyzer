import pandas as pd

def analyze_demographic_data(df):
    # 1. How many people of each race are represented in this dataset?
    race_count = df['race'].value_counts()

    # 2. What is the average age of men?
    average_age_men = round(df[df['sex'] == 'Male']['age'].mean(), 1)

    # 3. What is the percentage of people who have a Bachelor's degree?
    percentage_bachelors = round((df['education'] == 'Bachelors').mean() * 100, 1)

    # 4. Advanced education (Bachelors, Masters, Doctorate)
    advanced_edu = df['education'].isin(['Bachelors', 'Masters', 'Doctorate'])
    higher_education = df[advanced_edu]
    lower_education = df[~advanced_edu]

    higher_education_rich = round((higher_education['salary'] == '>50K').mean() * 100, 1)
    lower_education_rich = round((lower_education['salary'] == '>50K').mean() * 100, 1)

    # 5. Minimum number of hours a person works per week
    min_work_hours = df['hours-per-week'].min()

    # 6. Percentage of people working min hours with salary >50K
    min_workers = df[df['hours-per-week'] == min_work_hours]
    rich_min_workers = round((min_workers['salary'] == '>50K').mean() * 100, 1)

    # 7. Country with highest percentage of >50K earners
    country_salary = df.groupby('native-country')['salary'].value_counts(normalize=True).unstack()
    country_salary['>50K'] = country_salary['>50K'] * 100
    top_country = country_salary['>50K'].idxmax()
    top_country_percentage = round(country_salary['>50K'].max(), 1)

    # 8. Most popular occupation for >50K earners in India
    india_rich = df[(df['native-country'] == 'India') & (df['salary'] == '>50K')]
    top_IN_occupation = india_rich['occupation'].value_counts().idxmax()

    return {
        'race_count': race_count,
        'average_age_men': average_age_men,
        'percentage_bachelors': percentage_bachelors,
        'higher_education_rich': higher_education_rich,
        'lower_education_rich': lower_education_rich,
        'min_work_hours': min_work_hours,
        'rich_min_workers': rich_min_workers,
        'top_country': top_country,
        'top_country_percentage': top_country_percentage,
        'top_IN_occupation': top_IN_occupation
    }
